# CDK-mintd Configuration for Deterministic Integration Testing
# ==========================================================
# 
# This configuration provides reproducible, deterministic Cashu token generation
# for integration testing with the Manastr gaming system. Key features:
#
# ðŸ”‘ DETERMINISTIC KEYS: Fixed mnemonic ensures same C values across test runs
# ðŸŽ® GAMING OPTIMIZED: Configured for army generation via token C values
# âš¡ FAST TESTING: Minimal delays and fees for rapid integration test cycles
# ðŸ”„ DUAL CURRENCY: Supports both "mana" (gameplay) and "loot" (rewards) tokens

[info]
url = "http://127.0.0.1:3333/"
listen_host = "127.0.0.1"
listen_port = 3333
# CRITICAL: Fixed mnemonic for deterministic C value generation
# This ensures the same token C values are generated across test runs
mnemonic = "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about"
input_fee_ppk = 0
enable_swagger_ui = true

[mint_management_rpc]
enabled = false

[info.http_cache]
# Use in-memory cache for testing performance
backend = "memory"
ttl = 60
tti = 60

[mint_info]
name = "Manastr Deterministic Gaming Mint"
description = "CDK mint optimized for deterministic Cashu token C value generation in gaming"
description_long = "Full CDK mint implementation providing deterministic, cryptographically-secure token C values for tamper-proof army generation in the revolutionary Manastr gaming system. Supports dual currency model with mana (gameplay tokens) and loot (reward tokens)."
motd = "ðŸŽ® Deterministic gaming mint operational! C values provide tamper-proof army randomness."
contact_email = "mint@manastr.game"

[database]
# Use SQLite for persistence with deterministic behavior
engine = "sqlite"

[ln]
# Use fake wallet backend for testing - auto-fills Lightning quotes
ln_backend = "fakewallet"
min_mint = 1
max_mint = 1000000
min_melt = 1
max_melt = 1000000

[fake_wallet]
# Fake Lightning backend optimized for gaming integration tests
# Support dual currency system for gaming: mana (gameplay) and loot (rewards)
supported_units = ["mana", "loot"]
fee_percent = 0.01  # 1% fee for testing
reserve_fee_min = 1  # Minimum 1 unit reserve
# Minimal delays for fast testing
min_delay_time = 1   # 1 second minimum delay
max_delay_time = 2   # 2 second maximum delay